---
title: "day6interactive"
format: html
editor: visual
---

```{r}
library(tidyverse)
library(here)
library(janitor)
```

```{r}
wb_indicators <- read_csv(here("data", "wb_indicators.csv"), na = c("..", ""))
```

```{r}
wb_indicators_long <- wb_indicators %>% 
  pivot_longer(cols = `2001 [YR2001]`:`2020 [YR2020]`,
               names_to = "Year",
               values_to = "indicator_value")
```

```{r}
wb_indicators_clean <- wb_indicators_long %>% 
  tidyr::separate(col = "Year",into = c("year","year_chr"),sep = " ") %>% 
  dplyr::select(-year_chr, -`Country Code`,-`Series Code`)
```

unique(wb_indicators_clean\$'Series Name')

to see the different variables in the column

will separate this column based on the variables

```{r}
wb_indicators_tidy <- wb_indicators_clean %>% 
  tidyr::drop_na(`Series Name`) %>% 
tidyr::pivot_wider(names_from = 'Series Name',
                   values_from = 'indicator_value') %>% 
  dplyr::rename(country = "Country Name",
                access_fuels_pp = "Access to clean fuels and technologies for cooking (% of population)",
                access_electricity_pp = "Access to electricity (% of population)",
                co2_emissions_kt = "CO2 emissions (kt)",
                fossil_fuel_cons_pt = "Fossil fuel energy consumption (% of total)", water_stress = "Level of water stress: freshwater withdrawal as a proportion of available freshwater resources"
                ) %>% 
  dplyr::mutate(year = as.numeric(year))
```

```{r}
ggplot(data = wb_indicators_tidy, aes(x = year, y = co2_emissions_kt)) +
  geom_line(aes(color = country)) +
  theme(legend.position="none")

#check class of x and y variables, this didn't work at first because year was classed as a character. Use the Mutate() function to change year to numeric
```
